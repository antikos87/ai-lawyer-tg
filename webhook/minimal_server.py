#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π webhook —Å–µ—Ä–≤–µ—Ä –¥–ª—è AI-—é—Ä–∏—Å—Ç–∞ (–±–µ–∑ Supabase/YooKassa –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏)
–ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏ –∏ –±—ã—Å—Ç—Ä–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è webhook endpoints
"""

import logging
import json
from flask import Flask, request, jsonify
from datetime import datetime

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    handlers=[
        logging.StreamHandler()
    ]
)

logger = logging.getLogger(__name__)
app = Flask(__name__)


@app.route('/webhook/ai-lawyer', methods=['POST'])
def handle_ai_lawyer_webhook():
    """
    –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π webhook endpoint –¥–ª—è AI-—é—Ä–∏—Å—Ç–∞
    –ü—Ä–æ—Å—Ç–æ –ª–æ–≥–∏—Ä—É–µ—Ç –≤—Ö–æ–¥—è—â–∏–µ –¥–∞–Ω–Ω—ã–µ –±–µ–∑ –æ–±—Ä–∞–±–æ—Ç–∫–∏
    """
    try:
        # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ—Ç YooKassa
        webhook_data = request.get_json()
        
        if not webhook_data:
            logger.warning("–ü–æ–ª—É—á–µ–Ω –ø—É—Å—Ç–æ–π webhook")
            return jsonify({"error": "Empty webhook data"}), 400
        
        logger.info(f"AI-Lawyer webhook –ø–æ–ª—É—á–µ–Ω: {webhook_data}")
        
        # –í–æ–∑–≤—Ä–∞—â–∞–µ–º —É—Å–ø–µ—à–Ω—ã–π –æ—Ç–≤–µ—Ç
        return jsonify({
            "status": "success", 
            "message": "Webhook –ø–æ–ª—É—á–µ–Ω –∏ –æ–±—Ä–∞–±–æ—Ç–∞–Ω",
            "received_data": webhook_data
        }), 200
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ webhook: {e}")
        return jsonify({"error": "Internal server error"}), 500


@app.route('/health', methods=['GET'])
def health_check():
    """
    –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è —Å–µ—Ä–≤–∏—Å–∞
    """
    return jsonify({
        "status": "ok",
        "timestamp": datetime.now().isoformat(),
        "service": "ai-lawyer-webhook-minimal"
    }), 200


@app.route('/', methods=['GET'])
def index():
    """
    –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞
    """
    return jsonify({
        "service": "AI-Lawyer Webhook Server (Minimal)",
        "version": "1.0.0-minimal",
        "endpoints": [
            "/webhook/ai-lawyer",
            "/health"
        ]
    }), 200


if __name__ == '__main__':
    logger.info("üöÄ –ó–∞–ø—É—Å–∫ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–≥–æ webhook —Å–µ—Ä–≤–µ—Ä–∞...")
    logger.info("üì° –î–æ—Å—Ç—É–ø–Ω—ã–µ endpoints:")
    logger.info("  ‚Ä¢ /webhook/ai-lawyer - AI-—é—Ä–∏—Å—Ç (–º–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –≤–µ—Ä—Å–∏—è)")
    logger.info("  ‚Ä¢ /health - –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è")
    
    # –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞ –Ω–∞ –ø–æ—Ä—Ç—É 8080 (–¥–ª—è –æ—Ç–ª–∞–¥–∫–∏)
    app.run(host='0.0.0.0', port=8080, debug=True) 