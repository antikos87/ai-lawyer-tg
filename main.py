#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
AI-—é—Ä–∏—Å—Ç Telegram Bot
–û—Å–Ω–æ–≤–Ω–æ–π —Ñ–∞–π–ª –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞
"""

import logging
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import Application, CommandHandler, CallbackQueryHandler, MessageHandler, ConversationHandler, filters, ContextTypes

from config import TELEGRAM_TOKEN
from bot.handlers import (
    consult_command, category_selected, process_question, 
    back_to_categories, cancel_consultation, ConsultationStates,
    main_menu_callback, continue_consultation, process_dialog_message,
    continue_dialog, end_consultation
)

from bot.document_handlers import (
    DocumentStates, create_command, document_type_selected, document_subtype_selected,
    start_data_collection, process_answer, handle_document_review,
    start_document_editing, start_document_supplement, process_document_changes,
    regenerate_document, finalize_document, handle_document_rating,
    back_to_types, back_to_subtypes, cancel_document_creation
)

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)
logger = logging.getLogger(__name__)


async def start_command(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
    –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é —Å inline-–∫–Ω–æ–ø–∫–∞–º–∏
    """
    user = update.effective_user
    user_name = user.first_name if user.first_name else "–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å"
    
    welcome_message = (
        f"üèõÔ∏è **AI-–Æ—Ä–∏—Å—Ç** ‚Äî –≤–∞—à –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –ø—Ä–∞–≤–æ–≤–æ–π –ø–æ–º–æ—â–Ω–∏–∫\n\n"
        f"üëã –ü—Ä–∏–≤–µ—Ç, {user_name}!\n\n"
        
        "üéØ **–ü—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã–π —Å–µ—Ä–≤–∏—Å:**\n"
        "‚Ä¢ 6 –æ—Ç—Ä–∞—Å–ª–µ–π –ø—Ä–∞–≤–∞\n"
        "‚Ä¢ 40+ —Ç–∏–ø–æ–≤ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤\n"
        "‚Ä¢ –≠–∫—Å–ø–æ—Ä—Ç –≤ Word\n"
        "‚Ä¢ –ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–π –ø—Ä–æ–≤–µ–¥–µ–Ω–æ: 500+\n\n"
        
        "üíº **–í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—É—é —É—Å–ª—É–≥—É:**"
    )
    
    # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
    keyboard = [
        [InlineKeyboardButton("üí¨ –Æ—Ä–∏–¥–∏—á–µ—Å–∫–∞—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è", callback_data="menu_consult")],
        [InlineKeyboardButton("üìÑ –°–æ–∑–¥–∞–Ω–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤", callback_data="menu_create")],
        [InlineKeyboardButton("üìä –ê–Ω–∞–ª–∏–∑ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤", callback_data="menu_analyze")],
        [InlineKeyboardButton("‚ÑπÔ∏è –°–ø—Ä–∞–≤–∫–∞ –∏ –ø–æ–¥–¥–µ—Ä–∂–∫–∞", callback_data="menu_help")]
    ]
    
    reply_markup = InlineKeyboardMarkup(keyboard)
    
    await update.message.reply_text(
        welcome_message,
        reply_markup=reply_markup,
        parse_mode='Markdown'
    )


async def help_command(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help - –ø–æ–¥—Ä–æ–±–Ω–∞—è —Å–ø—Ä–∞–≤–∫–∞
    """
    help_text = (
        "üìñ **–ü–æ–¥—Ä–æ–±–Ω–∞—è —Å–ø—Ä–∞–≤–∫–∞ AI-–Æ—Ä–∏—Å—Ç**\n\n"
        
        "ü§ñ **–û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:**\n"
        "‚Ä¢ `/start` ‚Äî –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é —Å –≤—ã–±–æ—Ä–æ–º —É—Å–ª—É–≥\n"
        "‚Ä¢ `/consult` ‚Äî –ü—Ä—è–º–æ–π –ø–µ—Ä–µ—Ö–æ–¥ –∫ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏\n"
        "‚Ä¢ `/create` ‚Äî –ü—Ä—è–º–æ–π –ø–µ—Ä–µ—Ö–æ–¥ –∫ —Å–æ–∑–¥–∞–Ω–∏—é –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤\n"
        "‚Ä¢ `/help` ‚Äî –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É\n\n"
        
        "üí¨ **–Æ—Ä–∏–¥–∏—á–µ—Å–∫–∞—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è:**\n"
        "‚Ä¢ –ó–∞–¥–∞–π—Ç–µ –ª—é–±–æ–π –ø—Ä–∞–≤–æ–≤–æ–π –≤–æ–ø—Ä–æ—Å\n"
        "‚Ä¢ –ü–æ–ª—É—á–∏—Ç–µ –æ—Ç–≤–µ—Ç —Å–æ —Å—Å—ã–ª–∫–∞–º–∏ –Ω–∞ –∑–∞–∫–æ–Ω—ã\n"
        "‚Ä¢ –í–µ–¥–∏—Ç–µ –¥–∏–∞–ª–æ–≥ —Å —É—Ç–æ—á–Ω—è—é—â–∏–º–∏ –≤–æ–ø—Ä–æ—Å–∞–º–∏\n"
        "‚Ä¢ –î–æ—Å—Ç—É–ø–Ω–æ 6 –æ—Ç—Ä–∞—Å–ª–µ–π –ø—Ä–∞–≤–∞\n\n"
        
        "üìÑ **–°–æ–∑–¥–∞–Ω–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤:**\n"
        "‚Ä¢ 40+ —Ç–∏–ø–æ–≤ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤\n"
        "‚Ä¢ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –≥–µ–Ω–µ—Ä–∞—Ü–∏—è –∑–∞ 5 –º–∏–Ω—É—Ç\n"
        "‚Ä¢ –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è\n"
        "‚Ä¢ –≠–∫—Å–ø–æ—Ä—Ç –≤ —Ñ–æ—Ä–º–∞—Ç Word (.docx)\n"
        "‚Ä¢ –°–∏—Å—Ç–µ–º–∞ –æ—Ü–µ–Ω–∫–∏ –∫–∞—á–µ—Å—Ç–≤–∞\n\n"
        
        "üîê **–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –∏ –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—å:**\n"
        "‚Ä¢ –í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ –Ω–µ —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä–∞—Ö\n"
        "‚Ä¢ –í—Å–µ —Ñ–∞–π–ª—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —É–¥–∞–ª—è—é—Ç—Å—è\n"
        "‚Ä¢ –®–∏—Ñ—Ä–æ–≤–∞–Ω–Ω–∞—è –ø–µ—Ä–µ–¥–∞—á–∞ –¥–∞–Ω–Ω—ã—Ö\n"
        "‚Ä¢ –ü–æ–ª–Ω–∞—è –∞–Ω–æ–Ω–∏–º–Ω–æ—Å—Ç—å\n\n"
        
        "üìû **–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞:**\n"
        "‚Ä¢ Telegram: @ai_lawyer_support\n"
        "‚Ä¢ –í—Ä–µ–º—è –æ—Ç–≤–µ—Ç–∞: –¥–æ 2 —á–∞—Å–æ–≤\n"
        "‚Ä¢ –†–µ—à–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º –∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è"
    )
    
    keyboard = [
        [InlineKeyboardButton("‚¨ÖÔ∏è –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="back_to_main")]
    ]
    
    reply_markup = InlineKeyboardMarkup(keyboard)
    
    await update.message.reply_text(
        help_text,
        reply_markup=reply_markup,
        parse_mode='Markdown'
    )


async def main_menu_handler(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–æ–∫ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
    """
    query = update.callback_query
    await query.answer()
    
    if query.data == "menu_consult":
        # –ü–µ—Ä–µ—Ö–æ–¥ –∫ —é—Ä–∏–¥–∏—á–µ—Å–∫–æ–π –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏
        consultation_text = (
            "üí¨ **–Æ—Ä–∏–¥–∏—á–µ—Å–∫–∞—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è**\n\n"
            "üìã –ü–æ–ª—É—á–∏—Ç–µ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç –æ—Ç AI-—é—Ä–∏—Å—Ç–∞ –ø–æ –ª—é–±–æ–º—É –ø—Ä–∞–≤–æ–≤–æ–º—É –≤–æ–ø—Ä–æ—Å—É\n\n"
            
            "üéØ **–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏:**\n"
            "‚Ä¢ –ì—Ä–∞–∂–¥–∞–Ω—Å–∫–æ–µ –ø—Ä–∞–≤–æ\n"
            "‚Ä¢ –£–≥–æ–ª–æ–≤–Ω–æ–µ –ø—Ä–∞–≤–æ\n"
            "‚Ä¢ –°–µ–º–µ–π–Ω–æ–µ –ø—Ä–∞–≤–æ\n"
            "‚Ä¢ –¢—Ä—É–¥–æ–≤–æ–µ –ø—Ä–∞–≤–æ\n"
            "‚Ä¢ –ñ–∏–ª–∏—â–Ω–æ–µ –ø—Ä–∞–≤–æ\n"
            "‚Ä¢ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω–æ–µ –ø—Ä–∞–≤–æ\n\n"
            
            "üí° **–û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏:**\n"
            "‚Ä¢ –û—Ç–≤–µ—Ç—ã —Å–æ —Å—Å—ã–ª–∫–∞–º–∏ –Ω–∞ –∑–∞–∫–æ–Ω—ã –†–§\n"
            "‚Ä¢ –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —É—Ç–æ—á–Ω—è—é—â–∏—Ö –≤–æ–ø—Ä–æ—Å–æ–≤\n"
            "‚Ä¢ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –¥–∏–∞–ª–æ–≥–∞\n\n"
            
            "–î–ª—è –Ω–∞—á–∞–ª–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ:"
        )
        
        keyboard = [
            [InlineKeyboardButton("‚ñ∂Ô∏è –ù–∞—á–∞—Ç—å –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é", callback_data="start_consult")],
            [InlineKeyboardButton("‚¨ÖÔ∏è –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="back_to_main")]
        ]
        
        reply_markup = InlineKeyboardMarkup(keyboard)
        
        await query.message.reply_text(
            consultation_text,
            reply_markup=reply_markup,
            parse_mode='Markdown'
        )
        
    elif query.data == "menu_create":
        # –ü–µ—Ä–µ—Ö–æ–¥ –∫ —Å–æ–∑–¥–∞–Ω–∏—é –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤
        create_text = (
            "üìÑ **–°–æ–∑–¥–∞–Ω–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤**\n\n"
            "üìù –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Å–æ—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –≥–æ—Ç–æ–≤—ã—Ö —é—Ä–∏–¥–∏—á–µ—Å–∫–∏—Ö –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –∑–∞ 5 –º–∏–Ω—É—Ç\n\n"
            
            "üìã **–¢–∏–ø—ã –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ (40+ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤):**\n"
            "‚Ä¢ –î–æ–≥–æ–≤–æ—Ä—ã (–∞—Ä–µ–Ω–¥—ã, –∫—É–ø–ª–∏-–ø—Ä–æ–¥–∞–∂–∏, —É—Å–ª—É–≥)\n"
            "‚Ä¢ –ò—Å–∫–æ–≤—ã–µ –∑–∞—è–≤–ª–µ–Ω–∏—è (—Å–ø–æ—Ä—ã, –≤–∑—ã—Å–∫–∞–Ω–∏—è)\n"
            "‚Ä¢ –î–æ—Å—É–¥–µ–±–Ω—ã–µ –ø—Ä–µ—Ç–µ–Ω–∑–∏–∏\n"
            "‚Ä¢ –°–æ–≥–ª–∞—à–µ–Ω–∏—è –∏ –¥–æ–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç–∏\n"
            "‚Ä¢ –ó–∞—è–≤–ª–µ–Ω–∏—è –∏ –ø—Ä–æ—Ç–æ–∫–æ–ª—ã\n\n"
            
            "‚ö° **–ü—Ä–æ—Ü–µ—Å—Å:**\n"
            "‚Ä¢ –í—ã–±–æ—Ä —Ç–∏–ø–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞\n"
            "‚Ä¢ –û—Ç–≤–µ—Ç—ã –Ω–∞ 5-7 –≤–æ–ø—Ä–æ—Å–æ–≤\n"
            "‚Ä¢ –ê–≤—Ç–æ–≥–µ–Ω–µ—Ä–∞—Ü–∏—è —á–µ—Ä–µ–∑ –ò–ò\n"
            "‚Ä¢ –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ —ç–∫—Å–ø–æ—Ä—Ç –≤ Word\n\n"
            
            "–î–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –¥–æ–∫—É–º–µ–Ω—Ç–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ:"
        )
        
        keyboard = [
            [InlineKeyboardButton("‚ñ∂Ô∏è –°–æ–∑–¥–∞—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç", callback_data="start_create")],
            [InlineKeyboardButton("‚¨ÖÔ∏è –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="back_to_main")]
        ]
        
        reply_markup = InlineKeyboardMarkup(keyboard)
        
        await query.message.reply_text(
            create_text,
            reply_markup=reply_markup,
            parse_mode='Markdown'
        )
        
    elif query.data == "menu_analyze":
        # –ê–Ω–∞–ª–∏–∑ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ (–±—É–¥—É—â–∞—è —Ñ—É–Ω–∫—Ü–∏—è)
        analyze_text = (
            "üìä **–ê–Ω–∞–ª–∏–∑ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤**\n\n"
            "üîç –ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –∏ —ç–∫—Å–ø–µ—Ä—Ç–Ω–æ–µ –∑–∞–∫–ª—é—á–µ–Ω–∏–µ –ø–æ –≤–∞—à–∏–º –¥–æ–∫—É–º–µ–Ω—Ç–∞–º\n\n"
            
            "üìÑ **–ß—Ç–æ –º–æ–∂–Ω–æ –∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å:**\n"
            "‚Ä¢ –î–æ–≥–æ–≤–æ—Ä—ã –Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ –∑–∞–∫–æ–Ω—É\n"
            "‚Ä¢ –ò—Å–∫–æ–≤—ã–µ –∑–∞—è–≤–ª–µ–Ω–∏—è\n"
            "‚Ä¢ –ü—Ä–µ—Ç–µ–Ω–∑–∏–∏ –∏ –∂–∞–ª–æ–±—ã\n"
            "‚Ä¢ –î–µ–ª–æ–≤—É—é –ø–µ—Ä–µ–ø–∏—Å–∫—É\n\n"
            
            "‚öôÔ∏è **–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:**\n"
            "‚Ä¢ –ü–æ–∏—Å–∫ —é—Ä–∏–¥–∏—á–µ—Å–∫–∏—Ö –æ—à–∏–±–æ–∫\n"
            "‚Ä¢ –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ —É–ª—É—á—à–µ–Ω–∏—é\n"
            "‚Ä¢ –û—Ü–µ–Ω–∫–∞ –ø—Ä–∞–≤–æ–≤—ã—Ö —Ä–∏—Å–∫–æ–≤\n"
            "‚Ä¢ –°–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º\n\n"
            
            "üöß **–°—Ç–∞—Ç—É—Å:** –§—É–Ω–∫—Ü–∏—è –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ\n"
            "üìÖ **–ó–∞–ø—É—Å–∫:** –ü–ª–∞–Ω–∏—Ä—É–µ—Ç—Å—è –≤ –±–ª–∏–∂–∞–π—à–∏—Ö –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è—Ö"
        )
        
        keyboard = [
            [InlineKeyboardButton("üîî –£–≤–µ–¥–æ–º–∏—Ç—å –æ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏", callback_data="notify_analyze")],
            [InlineKeyboardButton("‚¨ÖÔ∏è –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="back_to_main")]
        ]
        
        reply_markup = InlineKeyboardMarkup(keyboard)
        
        await query.message.reply_text(
            analyze_text,
            reply_markup=reply_markup,
            parse_mode='Markdown'
        )
        
    elif query.data == "menu_help":
        # –°–ø—Ä–∞–≤–∫–∞ –∏ –ø–æ–¥–¥–µ—Ä–∂–∫–∞
        help_text = (
            "‚ÑπÔ∏è **–°–ø—Ä–∞–≤–∫–∞ –∏ –ø–æ–¥–¥–µ—Ä–∂–∫–∞**\n\n"
            "üìñ –ü–æ–ª–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è—Ö AI-–Æ—Ä–∏—Å—Ç–∞\n\n"
            
            "ü§ñ **–ö–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞:**\n"
            "‚Ä¢ `/start` ‚Äî –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é\n"
            "‚Ä¢ `/consult` ‚Äî –ë—ã—Å—Ç—Ä–∞—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è\n"
            "‚Ä¢ `/create` ‚Äî –°–æ–∑–¥–∞–Ω–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞\n"
            "‚Ä¢ `/help` ‚Äî –ü–æ–¥—Ä–æ–±–Ω–∞—è —Å–ø—Ä–∞–≤–∫–∞\n\n"
            
            "üí° **–ö–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è:**\n"
            "‚Ä¢ –í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—É—é —É—Å–ª—É–≥—É –≤ –º–µ–Ω—é\n"
            "‚Ä¢ –°–ª–µ–¥—É–π—Ç–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º –±–æ—Ç–∞\n"
            "‚Ä¢ –ó–∞–¥–∞–≤–∞–π—Ç–µ —É—Ç–æ—á–Ω—è—é—â–∏–µ –≤–æ–ø—Ä–æ—Å—ã\n"
            "‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏\n\n"
            
            "üîí **–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å:**\n"
            "‚Ä¢ –î–∞–Ω–Ω—ã–µ –Ω–µ —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è\n"
            "‚Ä¢ –ö–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—å –≥–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∞\n"
            "‚Ä¢ –í—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã –∞–≤—Ç–æ—É–¥–∞–ª—è—é—Ç—Å—è\n\n"
            
            "üìû **–ü–æ–¥–¥–µ—Ä–∂–∫–∞:** @ai_lawyer_support"
        )
        
        keyboard = [
            [InlineKeyboardButton("üìã –ü–æ–¥—Ä–æ–±–Ω–∞—è —Å–ø—Ä–∞–≤–∫–∞", callback_data="detailed_help")],
            [InlineKeyboardButton("üí¨ –ù–∞–ø–∏—Å–∞—Ç—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É", url="https://t.me/ai_lawyer_support")],
            [InlineKeyboardButton("‚¨ÖÔ∏è –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="back_to_main")]
        ]
        
        reply_markup = InlineKeyboardMarkup(keyboard)
        
        await query.message.reply_text(
            help_text,
            reply_markup=reply_markup,
            parse_mode='Markdown'
        )
    
    elif query.data == "back_to_main":
        # –í–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
        user = update.effective_user
        user_name = user.first_name if user.first_name else "–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å"
        
        welcome_message = (
            f"üèõÔ∏è **AI-–Æ—Ä–∏—Å—Ç** ‚Äî –≤–∞—à –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –ø—Ä–∞–≤–æ–≤–æ–π –ø–æ–º–æ—â–Ω–∏–∫\n\n"
            f"üëã –ü—Ä–∏–≤–µ—Ç, {user_name}!\n\n"
            
            "üéØ **–ü—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã–π —Å–µ—Ä–≤–∏—Å:**\n"
            "‚Ä¢ 6 –æ—Ç—Ä–∞—Å–ª–µ–π –ø—Ä–∞–≤–∞\n"
            "‚Ä¢ 40+ —Ç–∏–ø–æ–≤ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤\n"
            "‚Ä¢ –≠–∫—Å–ø–æ—Ä—Ç –≤ Word\n"
            "‚Ä¢ –ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–π –ø—Ä–æ–≤–µ–¥–µ–Ω–æ: 500+\n\n"
            
            "üíº **–í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—É—é —É—Å–ª—É–≥—É:**"
        )
        
        # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
        keyboard = [
            [InlineKeyboardButton("üí¨ –Æ—Ä–∏–¥–∏—á–µ—Å–∫–∞—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è", callback_data="menu_consult")],
            [InlineKeyboardButton("üìÑ –°–æ–∑–¥–∞–Ω–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤", callback_data="menu_create")],
            [InlineKeyboardButton("üìä –ê–Ω–∞–ª–∏–∑ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤", callback_data="menu_analyze")],
            [InlineKeyboardButton("‚ÑπÔ∏è –°–ø—Ä–∞–≤–∫–∞ –∏ –ø–æ–¥–¥–µ—Ä–∂–∫–∞", callback_data="menu_help")]
        ]
        
        reply_markup = InlineKeyboardMarkup(keyboard)
        
        await query.message.reply_text(
            welcome_message,
            reply_markup=reply_markup,
            parse_mode='Markdown'
        )
    
    elif query.data == "notify_analyze":
        # –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –∞–Ω–∞–ª–∏–∑–∞
        await query.message.reply_text(
            "üîî **–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ!**\n\n"
            "–ú—ã –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —Å–æ–æ–±—â–∏–º –≤–∞–º, –∫–æ–≥–¥–∞ —Ñ—É–Ω–∫—Ü–∏—è –∞–Ω–∞–ª–∏–∑–∞ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –±—É–¥–µ—Ç –≥–æ—Ç–æ–≤–∞.\n\n"
            "üìß –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø—Ä–∏–¥–µ—Ç –≤ —ç—Ç–æ—Ç —á–∞—Ç\n"
            "‚è∞ –û–∂–∏–¥–∞–µ–º—ã–π —Å—Ä–æ–∫: 2-3 –Ω–µ–¥–µ–ª–∏"
        )
    
    elif query.data == "detailed_help":
        # –ü–æ–¥—Ä–æ–±–Ω–∞—è —Å–ø—Ä–∞–≤–∫–∞
        await help_command(update, context)


def main() -> None:
    """
    –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞
    """
    # –°–æ–∑–¥–∞—ë–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
    application = Application.builder().token(TELEGRAM_TOKEN).build()
    
    # ConversationHandler –¥–ª—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–π
    consultation_handler = ConversationHandler(
        entry_points=[
            CommandHandler('consult', consult_command),
            CallbackQueryHandler(lambda update, context: consult_command(update, context), pattern='^start_consult$')
        ],
        states={
            ConsultationStates.CATEGORY_SELECTION.value: [
                CallbackQueryHandler(category_selected, pattern='^category_'),
                CallbackQueryHandler(back_to_categories, pattern='^back_to_categories$'),
                CallbackQueryHandler(main_menu_callback, pattern='^main_menu$')
            ],
            ConsultationStates.WAITING_QUESTION.value: [
                MessageHandler(filters.TEXT & ~filters.COMMAND, process_question),
                CallbackQueryHandler(back_to_categories, pattern='^back_to_categories$'),
                CallbackQueryHandler(main_menu_callback, pattern='^main_menu$')
            ],
            ConsultationStates.CONSULTATION_DIALOG.value: [
                MessageHandler(filters.TEXT & ~filters.COMMAND, process_dialog_message),
                CallbackQueryHandler(continue_consultation, pattern='^continue_consultation$'),
                CallbackQueryHandler(continue_dialog, pattern='^continue_dialog$'),
                CallbackQueryHandler(end_consultation, pattern='^end_consultation$'),
                CallbackQueryHandler(main_menu_callback, pattern='^main_menu$')
            ]
        },
        fallbacks=[CommandHandler('cancel', cancel_consultation)],
        allow_reentry=True
    )
    
    # ConversationHandler –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤
    document_conv_handler = ConversationHandler(
        entry_points=[
            CommandHandler("create", create_command),
            CallbackQueryHandler(lambda update, context: create_command(update, context), pattern='^start_create$')
        ],
        states={
            DocumentStates.DOCUMENT_TYPE_SELECTION.value: [
                CallbackQueryHandler(document_type_selected, pattern="^doctype_"),
                CallbackQueryHandler(main_menu_callback, pattern="^main_menu$")
            ],
            DocumentStates.DOCUMENT_SUBTYPE_SELECTION.value: [
                CallbackQueryHandler(document_subtype_selected, pattern="^docsubtype_"),
                CallbackQueryHandler(back_to_types, pattern="^back_to_types$"),
                CallbackQueryHandler(main_menu_callback, pattern="^main_menu$")
            ],
            DocumentStates.DATA_COLLECTION.value: [
                CallbackQueryHandler(start_data_collection, pattern="^start_data_collection$"),
                CallbackQueryHandler(process_answer, pattern="^answer_"),
                CallbackQueryHandler(process_answer, pattern="^custom_answer$"),
                CallbackQueryHandler(process_answer, pattern="^prev_question$"),
                CallbackQueryHandler(back_to_subtypes, pattern="^back_to_subtypes$"),
                MessageHandler(filters.TEXT & ~filters.COMMAND, process_answer),
                CallbackQueryHandler(main_menu_callback, pattern="^main_menu$")
            ],
            DocumentStates.DOCUMENT_GENERATION.value: [
                CallbackQueryHandler(main_menu_callback, pattern="^main_menu$")
            ],
            DocumentStates.DOCUMENT_REVIEW.value: [
                CallbackQueryHandler(handle_document_review, pattern="^accept_document$"),
                CallbackQueryHandler(handle_document_review, pattern="^edit_document$"),
                CallbackQueryHandler(handle_document_review, pattern="^supplement_document$"),
                CallbackQueryHandler(handle_document_review, pattern="^regenerate_document$"),
                CallbackQueryHandler(main_menu_callback, pattern="^main_menu$")
            ],
            DocumentStates.DOCUMENT_EDITING.value: [
                MessageHandler(filters.TEXT & ~filters.COMMAND, process_document_changes),
                CallbackQueryHandler(start_document_editing, pattern="^edit_document$"),
                CallbackQueryHandler(start_document_supplement, pattern="^supplement_document$"),
                CallbackQueryHandler(main_menu_callback, pattern="^main_menu$")
            ],
            DocumentStates.DOCUMENT_FINALIZATION.value: [
                CallbackQueryHandler(handle_document_rating, pattern="^rate_"),
                CallbackQueryHandler(handle_document_rating, pattern="^skip_rating$"),
                CallbackQueryHandler(create_command, pattern="^new_document$"),
                CallbackQueryHandler(consult_command, pattern="^consultation$"),
                CallbackQueryHandler(main_menu_callback, pattern="^main_menu$")
            ]
        },
        fallbacks=[
            CommandHandler("start", start_command),
            CallbackQueryHandler(cancel_document_creation, pattern="^cancel_"),
            CallbackQueryHandler(main_menu_callback, pattern="^main_menu$")
        ]
    )
    
    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
    application.add_handler(CommandHandler('start', start_command))
    application.add_handler(CommandHandler('help', help_command))
    application.add_handler(consultation_handler)
    application.add_handler(document_conv_handler)
    
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è callback query –≤–Ω–µ conversations
    application.add_handler(CallbackQueryHandler(main_menu_handler))
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
    logger.info("–ó–∞–ø—É—Å–∫ AI-—é—Ä–∏—Å—Ç –±–æ—Ç–∞...")
    application.run_polling(allowed_updates=Update.ALL_TYPES)


if __name__ == '__main__':
    main() 